import Logger from 'cc-utils/logger';
import GoogleAPI from '../gapi-lite';

const isDev = process.env.NODE_ENV !== 'production';
const api = new GoogleAPI(['https://www.googleapis.com/auth/pubsub']);
const prjPrefix = 'https://pubsub.googleapis.com/v1/projects';
const logger = new Logger('pubsub');

export async function publishMulti(topicName: string, jobs: any[]): Promise<[string]> {
  try {
    if (isDev) console.log(`pubsub.${topicName}.publish`);
    const ep = `${prjPrefix}/${topicName}:publish`;
    const messages = jobs.map((m) => ({
      data: Buffer.from(JSON.stringify(m)).toString('base64'),
    }));
    const resp = await api.request(ep, {
      method: 'POST',
      json: { messages },
      ccRetry: true,
    });
    return resp.messageIds;
  } catch (err) {
    logger.error('publish.failed', err, { topicName, jobs });
    throw err;
  }
}

export async function publish(topicName: string, job: any): Promise<string> {
  const result = await publishMulti(topicName, [job]);
  return result[0];
}

export function tryPublish(topicName: string, body: any): void {
  publish(topicName, body).catch(() => {
    /* error logged in publish() function */
  });
}
