import express, { Request, Response, NextFunction } from 'express';
export declare function action(asyncFunc: Function): (req: express.Request, res: express.Response, next: express.NextFunction) => void;
export declare function asyncToNext(asyncFunc: (req: Request, res: Response) => boolean): (req: express.Request, res: express.Response, next: express.NextFunction) => void;
export declare function jaction(asyncFunc: Function): (req: express.Request, res: express.Response, next: express.NextFunction) => void;
export declare function notFound(req: Request, res: Response): void;
export declare class ValidationError extends Error {
    errors?: Object;
    constructor(errors: Object);
}
export declare class NotImplementedError extends Error {
}
export declare function errorLogger(service: string, err: Error, req: Request, res: Response, _next: NextFunction): void;
export declare function staticCompressedJS(rootDir: string, devServer: string | null): (req: express.Request, res: express.Response, next: express.NextFunction) => void;
